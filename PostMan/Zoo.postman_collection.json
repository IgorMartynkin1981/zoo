{
	"info": {
		"_postman_id": "7fce889c-ef81-4add-a848-1f6313291818",
		"name": "Zoo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21583223"
	},
	"item": [
		{
			"name": "Animal",
			"item": [
				{
					"name": "createAnimal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"    pm.expect(jsonData.name).to.eql('Обезьяна');\r",
									"    pm.expect(jsonData.species).to.eql('MAMMAL');    \r",
									"    pm.expect(jsonData.predator).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Червяк\",\r\n  \"species\": \"MAMMAL\",\r\n  \"predator\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zoo/animals",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"animals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Animals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zoo/animals",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"animals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Animals By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"    pm.expect(jsonData.name).to.eql('Обезьяна');\r",
									"    pm.expect(jsonData.species).to.eql('MAMMAL');    \r",
									"    pm.expect(jsonData.predator).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zoo/animals/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"animals",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Animal By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zoo/animals/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"animals",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Animal By Ids",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zoo/animals/group/:Ids",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"animals",
								"group",
								":Ids"
							],
							"variable": [
								{
									"key": "Ids",
									"value": "1, 3, 5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all Animals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zoo/animals",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"animals"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Food",
			"item": [
				{
					"name": "createFood",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql('Вишня');\r",
									"    pm.expect(jsonData.amound).to.eql(56);    \r",
									"    pm.expect(jsonData.measure).to.eql('kg');\r",
									"    pm.expect(jsonData.typeOfProduct).to.eql('FRUIT');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Вишня\",\r\n  \"amound\": 56,\r\n  \"measure\": \"kg\",\r\n  \"typeOfProduct\": \"FRUIT\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zoo/foods",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"foods"
							]
						}
					},
					"response": []
				},
				{
					"name": "update Food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql('Вишня');\r",
									"    pm.expect(jsonData.amound).to.eql(100);    \r",
									"    pm.expect(jsonData.measure).to.eql('kg');\r",
									"    pm.expect(jsonData.typeOfProduct).to.eql('FRUIT');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 8,\r\n    \"name\": \"Вишня\",\r\n    \"amound\": 100,\r\n    \"measure\": \"kg\",\r\n    \"typeOfProduct\": \"FRUIT\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zoo/foods",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"foods"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Foods",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zoo/foods",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"foods"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Food By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"    pm.expect(jsonData.name).to.eql('Морковь');\r",
									"    pm.expect(jsonData.amound).to.eql(10.0);    \r",
									"    pm.expect(jsonData.measure).to.eql('pcs');\r",
									"    pm.expect(jsonData.typeOfProduct).to.eql('VEGETABLE');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zoo/foods/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"foods",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete food By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/zoo/foods/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"foods",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Food By Ids",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zoo/foods/group/:Ids",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"foods",
								"group",
								":Ids"
							],
							"variable": [
								{
									"key": "Ids",
									"value": "2, 3, 5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all Foods",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zoo/foods",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"foods"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Diet",
			"item": [
				{
					"name": "update Died By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 8,\r\n    \"name\": \"Вишня\",\r\n    \"amound\": 100,\r\n    \"measure\": \"kg\",\r\n    \"typeOfProduct\": \"FRUIT\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zoo/diets/diet/:animalId/:foodid/:amound",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"diets",
								"diet",
								":animalId",
								":foodid",
								":amound"
							],
							"variable": [
								{
									"key": "animalId",
									"value": "1"
								},
								{
									"key": "foodid",
									"value": "4"
								},
								{
									"key": "amound",
									"value": "999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Died By Id Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 8,\r\n    \"name\": \"Вишня\",\r\n    \"amound\": 100,\r\n    \"measure\": \"kg\",\r\n    \"typeOfProduct\": \"FRUIT\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zoo/diets/diet/:animalId/:foodid/:amound",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"diets",
								"diet",
								":animalId",
								":foodid",
								":amound"
							],
							"variable": [
								{
									"key": "animalId",
									"value": "1"
								},
								{
									"key": "foodid",
									"value": "1"
								},
								{
									"key": "amound",
									"value": "999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Diets By any params",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/zoo/diets/all?species=MAMMAL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"diets",
								"all"
							],
							"query": [
								{
									"key": "name",
									"value": "Т",
									"disabled": true
								},
								{
									"key": "species",
									"value": "MAMMAL"
								},
								{
									"key": "predator",
									"value": "false",
									"disabled": true
								},
								{
									"key": "typeOfProduct",
									"value": "FRUIT",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Diet By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/zoo/diets/diet/:animalId/:foodid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"diets",
								"diet",
								":animalId",
								":foodid"
							],
							"variable": [
								{
									"key": "animalId",
									"value": "1"
								},
								{
									"key": "foodid",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Diet Information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/zoo/diets/info?periodStart=2023-05-20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"diets",
								"info"
							],
							"query": [
								{
									"key": "periodStart",
									"value": "2023-05-20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Diets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/zoo/diets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"diets"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "add DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/zoo/admin/start",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zoo",
								"admin",
								"start"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		}
	]
}